apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: spring-boot-dev-template
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-sa

  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      lookupPolicy:
        local: false

  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      annotations:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        binary: {}
        type: Binary
      strategy:
        sourceStrategy:
          from:
            kind: DockerImage
            name: ${BASE_IMAGE}
        type: Source

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APPLICATION_NAME}
        deploymentconfig: ${APPLICATION_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
          labels:
            app: ${APPLICATION_NAME}
            deploymentconfig: ${APPLICATION_NAME}
        spec:
          serviceAccountName: ${APPLICATION_NAME}-sa
          containers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: dev
              image: ' '
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: ${APPLICATION_NAME}
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /config
                  name: ${APPLICATION_NAME}-config-vol
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                name: ${APPLICATION_NAME}-config
              name: ${APPLICATION_NAME}-config-vol

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      port:
        targetPort: 8080
      to:
        kind: Service
        name: ${APPLICATION_NAME}
        weight: 100
      wildcardPolicy: None

  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: ${APPLICATION_NAME}
        deploymentconfig: ${APPLICATION_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
      
parameters:
  - description: The name for the application.
    name: APPLICATION_NAME
    required: true
    value: basket
  - description: Base Docker image.
    name: BASE_IMAGE
    required: true
    value: "registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift:1.5"